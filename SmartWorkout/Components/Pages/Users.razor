
@page "/client"
@using Microsoft.AspNetCore.Mvc
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using SmartWorkout.DataAccess
@using SmartWorkout.DataAccess.Entities
@using SmartWorkout.DataAccess.IRepository
@using SmartWorkout.DataAccess.Repository
<style>
	

	.input-text {
		height: 2.5rem;
		padding: 0 1.25rem;
		border: 1px solid $black;
		border-radius: 2px;
		margin: 0.625rem auto;
		transition: all 250ms;
		border-radius: 4px;
	}
	.label{
		font-weight: bold;
	}

	.btn {
		background-color: white;
		color: black;
		border: 2px solid #04AA6D;
	}
	
	.btn:hover {
		background-color: #04AA6D; 
		color: white;
		border: 2px solid #04AA6D;
		box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
	}
	
	.form-group{
		width: 60%;
	}

	.form-group input{
		width: 100%;
	}
	
	.form-group-button{
		width: 40%;
	}
	

</style>

<EditForm  FormName="AddUser" OnValidSubmit="SubmitForm" Model="@newUser" class="form w-100">
	<DataAnnotationsValidator/>
	<h3 class="mb-5">Add Client</h3>
	<div class="container w-100 d-flex align-items-center justify-content-center flex-column">
	<link href="css/my-styles.css" rel="stylesheet" />
		<div class="form-group mb-3">
			<label for="first-name" class="label">First Name</label>
			<br />
			<InputText class="input-text" @bind-Value="@newUser.Name"></InputText>
			<ValidationMessage For="@(() => newUser.Name)"/>
		</div>
		<div class="form-group mb-3">
			<label for="last-name" class="label">Last Name</label>
			<br />
			<InputText class="input-text" @bind-Value="@newUser.Surname"></InputText>
			<ValidationMessage For="@(() => newUser.Surname)" />
		</div>
		<div class="form-group mb-3">
			<label for="exampleInputEmail1" class="label">Email address</label>
			<br />
			<InputText class="input-text" @bind-Value="@newUser.Email"></InputText>
		</div>
		<div class="form-group mb-3">
			<label for="phone-number" class="label">Phone Number</label>
			<br />
			<InputText class="input-text" @bind-Value="@newUser.Phone"></InputText>
		</div>
		<div class="form-group mb-3">
			<label for="weight" class="label">Weight (in kg)</label>
			<br />
			<InputNumber class="input-text" @bind-Value="@newUser.Weight"></InputNumber>
		</div>
		<div class="form-group mb-3">
			<label for="age" class="label">Age</label>
			<br />
			<InputNumber class="input-text" @bind-Value="@newUser.Age"></InputNumber>
		</div>
		<div class="form-group-button mb-3">
			<button type="submit" class="btn btn-primary w-100">Submit</button>
		</div>
	</div>
	

	@if (saved)
	{
		<p>The client has been created!</p>
	}
	@if (error)
	{
		<p>Something went wrong, please try again.</p>
	}
</EditForm>

@inject DataAccess.SmartWorkoutContext SmartWorkoutContext;
@code {


	public Client newUser = new Client();
	public bool saved = false;
	public bool error = false;
	private async Task SubmitForm()
	{
		saved = false;
		error = false;
		try{
			SmartWorkoutContext.Users.Add(newUser);
			await SmartWorkoutContext.SaveChangesAsync();
			newUser = new Client();
			saved = true;
		}
		catch (Exception)
		{
			error = true;
			throw;
		}

	}
}