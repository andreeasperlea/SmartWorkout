@page "/createWorkout"
@using SmartWorkout.DataAccess
@using SmartWorkout.DataAccess.Entities
@using SmartWorkout.DataAccess.IRepository
@inject IGenericRepository<Client> ClientRepo;
@inject IGenericRepository<Workout> WorkoutRepo;
@inject IGenericRepository<Exercise> ExerciseRepo;
@inject IGenericRepository<ExerciseLog> ExerciseLogRepo;


<EditForm FormName="Add Workout" OnValidSubmit="SubmitFormWorkout" Model="newWorkout" class="">
	<div class="form-group mb-3">
		<label for="clients" class="col-sm-2 col-form-label">
			Choose a Client:
		</label>
		<br />
		<InputSelect class="form-control" id="Client" @bind-Value="newWorkout.ClientId">
			@foreach (Client c in Clients)
			{
				<option value="@c.Id">@c.Name @c.Surname</option>
			}
		</InputSelect>
	</div>

	<div class="form-group mb-3">
		<label for="date">Date</label>
		<br />
		<InputDate class="form-control" @bind-Value="@newWorkout.Date"></InputDate>
	</div>

	<div class="form-group mb-3">
		<DataAnnotationsValidator />
		<label for="exercise" class="col-sm-2 col-form-label">
			Choose an Exercise:
		</label>
		<br />
		<InputSelect class="form-control" id="Exercise" @bind-Value="newExercise.Id">
			@foreach (Exercise e in Exercises)
			{
				<option value="@e.Id">@e.Name</option>
			}
		</InputSelect>
	</div>

	<div class="form-group mb-3">
		<label for="first-name">Weights(leave empty if you didn't use any)</label>
		<br />
		<InputNumber class="form-control" @bind-Value="@newExerciseLog.Weight"></InputNumber>
	</div>
	<div class="form-group mb-3">
		<label for="first-name">Sets</label>
		<br />
		<InputNumber class="form-control" @bind-Value="@newExerciseLog.Sets"></InputNumber>
	</div>
	<div class="form-group mb-3">
		<label for="first-name">Duration(in minutes)</label>
		<br />
		<InputNumber class="form-control" @bind-Value="@newExerciseLog.Duration"></InputNumber>
	</div>
	<div class="form-group mb-3">
		<label for="first-name">Distance in km(leave empty if it's not the case)</label>
		<br />
		<InputNumber class="form-control" @bind-Value="@newExerciseLog.Distance"></InputNumber>
	</div>
	<button type="submit" class="btn btn-primary">Submit</button>
	</EditForm>

@if (savedWorkout)
{
	<p>The workout has been created!</p>
}
@if (errorWorkout)
{
	<p>Something went wrong, please try again.</p>
}

@code {
	List<Exercise> Exercises = new();
	List<Client> Clients = new();
	private DataAccess.Entities.Client[] Users;
	public SmartWorkout.DataAccess.Entities.Workout newWorkout = new Workout();
	public ExerciseLog newExerciseLog = new ExerciseLog();
	public Exercise newExercise = new Exercise();
	public bool savedWorkout = false;
	public bool errorWorkout = false;
	protected override async Task OnInitializedAsync()
	{
		Users = ClientRepo.GetAll().ToArray();
		Clients = Users.ToList();
		Exercises = ExerciseRepo.GetAll().ToList();
		newWorkout.Date = DateTime.Now;

	}
	private async Task SubmitFormWorkout()
	{
		savedWorkout = false;
		errorWorkout = false;
		try
		{
			newWorkout.Duration = Convert.ToInt32(newExerciseLog.Duration);
			WorkoutRepo.Add(newWorkout);

			newExerciseLog.ExerciseId = newExercise.Id;
			newExerciseLog.WorkoutId = newWorkout.Id;
			ExerciseLogRepo.Add(newExerciseLog);

			newWorkout = new Workout();
			newExercise = new Exercise();
			newExerciseLog = new ExerciseLog();


			savedWorkout = true;

		}
		catch (Exception)
		{
			errorWorkout = true;
			throw;
		}
	}

}